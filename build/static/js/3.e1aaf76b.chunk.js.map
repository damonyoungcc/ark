{"version":3,"sources":["lib/tools/ShowTemplateCode.tool.tsx","lib/tools/ApiTableList.tool.tsx","lib/tools/HighLight.tool.tsx","lib/components/Button/codeExample/01_default-button.code.tsx","lib/components/Button/codeExample/01_default-button.example.tsx","lib/components/Button/codeExample/01_default-button.content.tsx","lib/components/Button/button.example.tsx"],"names":["App","props","ExampleComponent","CodeComponent","title","content","useState","showCode","setShowCode","className","icon","style","borderBottom","onClick","in","animation","timeout","ApiList","map","item","index","key","property","describe","type","defaultValue","preStyle","textAlign","margin","padding","fontSize","lineStyle","display","lineContentStyle","userSelect","defaultProps","code","language","theme","tokens","getLineProps","getTokenProps","styless","line","i","token","Demo","btnType","href","target","apiList"],"mappings":"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","file":"static/js/3.e1aaf76b.chunk.js","sourcesContent":["import React, { FC, ReactElement, useState } from 'react';\nimport Icon from '../components/Icon/icon';\nimport Transition from '../components/Transition/transition';\nimport './style/show_template.scss';\n\ninterface ShowCodeProps {\n  title: string;\n  ExampleComponent: ReactElement;\n  CodeComponent: ReactElement;\n  content: ReactElement;\n}\n\nconst App: FC<ShowCodeProps> = (props) => {\n  const { ExampleComponent, CodeComponent, title, content } = props;\n  const [showCode, setShowCode] = useState(false);\n\n  const handleShowCode = () => {\n    setShowCode(!showCode);\n  };\n\n  return (\n    <div className=\"show-template_wrapper\">\n      <div className=\"template-example\">{ExampleComponent}</div>\n      <div className=\"split-line\">\n        <div className=\"pre-line split-line-item\"></div>\n        <div className=\"template-title\">\n          <span className=\"template-title-text\">{title}</span>\n          <Icon icon=\"pencil-alt\" className=\"template-title-icon\" />\n        </div>\n        <div className=\"after-line split-line-item\"></div>\n      </div>\n      <div className=\"template-content\">{content}</div>\n      <div\n        className=\"template-icon\"\n        style={{ borderBottom: `${showCode ? '1px dashed #f0f0f0' : ''}` }}\n      >\n        <div className=\"icon-wrapper\">\n          <Icon icon=\"copy\" />\n          <Icon icon=\"bug\" />\n          <Icon icon=\"thumbs-up\" />\n          <Icon icon=\"charging-station\" />\n          <Icon\n            icon={showCode ? 'teeth-open' : 'teeth'}\n            onClick={handleShowCode}\n          />\n        </div>\n      </div>\n      <Transition in={showCode} animation=\"zoom-in-top\" timeout={300}>\n        <div className=\"template-code\">{CodeComponent}</div>\n      </Transition>\n    </div>\n  );\n};\n\nexport default App;\n","import React, { FC } from 'react';\nimport './style/api_table.scss';\ninterface ApiItem<T> {\n  property: T;\n  describe: T;\n  type: T;\n  defaultValue: T;\n}\n\ninterface ApiListProps {\n  ApiList: ApiItem<string>[];\n}\n\nconst App: FC<ApiListProps> = (props) => {\n  const { ApiList } = props;\n  return (\n    <div>\n      <table className=\"api-table\">\n        <thead>\n          <tr>\n            <th>属性</th>\n            <th>说明</th>\n            <th>类型</th>\n            <th>默认值</th>\n          </tr>\n        </thead>\n        <tbody>\n          {ApiList.map((item, index) => (\n            <tr key={index}>\n              <td>{item.property}</td>\n              <td>{item.describe}</td>\n              <td>\n                <code>{item.type}</code>\n              </td>\n              <td>{item.defaultValue}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default App;\n","import React, { FC } from 'react';\nimport Highlight, { defaultProps } from 'prism-react-renderer';\nimport theme from 'prism-react-renderer/themes/github';\ninterface Props {\n  code: string;\n}\n\nconst App: FC<Props> = (props) => {\n  let preStyle = {\n    textAlign: 'left',\n    margin: '0',\n    padding: '1.5em',\n    fontSize: '14px',\n  };\n\n  const lineStyle = {\n    display: 'table-row',\n  };\n\n  // const lineNoStyle = {\n  //   display: 'table-cell',\n  //   textAlign: 'right',\n  //   paddingRight: '1em',\n  //   userSelect: 'none',\n  //   opacity: '0.5',\n  // };\n\n  const lineContentStyle = {\n    display: 'table-cell',\n    userSelect: 'text',\n  };\n\n  return (\n    <Highlight {...defaultProps} code={props.code} language=\"tsx\" theme={theme}>\n      {({ className, style, tokens, getLineProps, getTokenProps }) => {\n        const styless = {...style, ...preStyle};\n        return (\n          <pre className={className} style={styless as React.CSSProperties}>\n            {tokens.map((line, i) => (\n              <div\n                style={lineStyle as React.CSSProperties}\n                key={i}\n                {...getLineProps({ line, key: i })}\n              >\n                {/* <span style={lineNoStyle as React.CSSProperties}>{i + 1}</span> */}\n                <span style={lineContentStyle as React.CSSProperties}>\n                  <code>\n                    {line.map((token, key) => (\n                      <span key={key} {...getTokenProps({ token, key })} />\n                    ))}\n                  </code>\n                </span>\n              </div>\n            ))}\n          </pre>\n        );\n      }}\n    </Highlight>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport HighLight from '../../../tools/HighLight.tool';\n\nconst Demo = () => {\n  const code = `  import React, { FC } from 'react';\n  import Button from './button';\n\n  const App: FC = () => {\n    return (\n      <>\n        <Button btnType=\"primary\">Primary Button</Button>\n        <Button>Default Button</Button>\n        <Button\n          btnType=\"link\"\n          href=\"https://github.com/yangdepp/ark\"\n          target=\"_blank\"\n        >\n          Link Button\n        </Button>\n      </>\n    );\n  };\n\n  export default App;`;\n\n  return <HighLight code={code}></HighLight>;\n};\n\n\n\nexport default Demo;\n","import React, { FC } from 'react';\nimport Button from '../button';\nconst App: FC = () => {\n  return (\n    <>\n      <Button btnType=\"primary\">Primary Button</Button>\n      <Button>Default Button</Button>\n      <Button\n        btnType=\"link\"\n        href=\"https://github.com/yangdepp/ark\"\n        target=\"_blank\"\n      >\n        Link Button\n      </Button>\n    </>\n  );\n};\n\nexport default App;\n","import React, { FC } from 'react';\nconst App: FC = () => {\n  return (\n    <div>\n      <div>\n        按钮类型有四种类型：主按钮、次按钮和链接按钮。主按钮在同一个操作区域最多出现一次。\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React, { FC } from 'react';\nimport TemplateShow from '../../tools/ShowTemplateCode.tool';\nimport ApiTableList from '../../tools/ApiTableList.tool';\nimport DefaultCode from './codeExample/01_default-button.code';\nimport DefaultExcample from './codeExample/01_default-button.example';\nimport DefaultContent from './codeExample/01_default-button.content';\n\nconst apiList = [\n  {\n    property: 'disabled',\n    describe: '按钮失效状态',\n    type: 'boolean',\n    defaultValue: 'false',\n  },\n  {\n    property: 'href',\n    describe: '点击跳转的地址，指定此属性 button 的行为和 a 链接一致',\n    type: 'string',\n    defaultValue: '-',\n  },\n];\n\nconst App: FC = () => {\n  return (\n    <div>\n      <h2 className=\"example-h2\">Button 按钮</h2>\n      <p className=\"example-p\">用于开始一个即时操作。</p>\n      <h3 className=\"example-h3\">何时使用</h3>\n      <ul className=\"example-ul\">\n        <li>主按钮：用于主行动点，一个操作区域只能有一个主按钮。</li>\n        <li>默认按钮：用于没有主次之分的一组行动点。</li>\n        <li>链接按钮：用于作为外链的行动点。</li>\n      </ul>\n      <h3 className=\"example-h3\">代码演示</h3>\n      <TemplateShow\n        title=\"按钮类型\"\n        CodeComponent={<DefaultCode />}\n        ExampleComponent={<DefaultExcample />}\n        content={<DefaultContent />}\n      />\n      <h3 className=\"example-h3\">API</h3>\n      <p className=\"example-p\">通过设置 Button 的属性来产生不同的按钮样式</p>\n      <ApiTableList ApiList={apiList} />\n    </div>\n  );\n};\n\nexport default App;\n"],"sourceRoot":""}